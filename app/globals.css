@import 'tailwindcss';

@theme {
  /* Core brand colors */
  --color-primary: oklch(0.71 0.19 78); /* Saffron (#FF9933) */
  --color-secondary: oklch(0.45 0.2 145); /* Deep Green (#138808) */
  --color-navy: oklch(0.25 0.2 265); /* Navy Blue (#000080) */

  /* Primary (Saffron) scale */
  --color-primary-50: oklch(0.98 0.02 78);
  --color-primary-100: oklch(0.95 0.04 78);
  --color-primary-200: oklch(0.9 0.08 78);
  --color-primary-300: oklch(0.85 0.12 78);
  --color-primary-400: oklch(0.78 0.16 78);
  --color-primary-500: oklch(0.71 0.19 78);
  --color-primary-600: oklch(0.64 0.22 78);
  --color-primary-700: oklch(0.57 0.24 78);
  --color-primary-800: oklch(0.5 0.26 78);
  --color-primary-900: oklch(0.43 0.28 78);

  /* Navy scale */
  --color-navy-50: oklch(0.98 0.02 265);
  --color-navy-100: oklch(0.93 0.04 265);
  --color-navy-200: oklch(0.86 0.08 265);
  --color-navy-300: oklch(0.79 0.12 265);
  --color-navy-400: oklch(0.72 0.16 265);
  --color-navy-500: oklch(0.25 0.2 265);
  --color-navy-600: oklch(0.38 0.22 265);
  --color-navy-700: oklch(0.31 0.24 265);
  --color-navy-800: oklch(0.24 0.26 265);
  --color-navy-900: oklch(0.17 0.28 265);

  /* Gray Scale with navy tint */
  --color-gray-50: oklch(0.98 0.005 265);
  --color-gray-100: oklch(0.94 0.005 265);
  --color-gray-200: oklch(0.88 0.005 265);
  --color-gray-300: oklch(0.8 0.005 265);
  --color-gray-400: oklch(0.65 0.005 265);
  --color-gray-500: oklch(0.5 0.005 265);
  --color-gray-600: oklch(0.35 0.005 265);
  --color-gray-700: oklch(0.25 0.005 265);
  --color-gray-800: oklch(0.15 0.005 265);
  --color-gray-900: oklch(0.1 0.005 265);

  /* Semantic mappings */
  --color-background: oklch(1 0 0);
  --color-foreground: var(--color-navy);
  --color-muted: var(--color-gray-100);
  --color-muted-foreground: var(--color-gray-500);
  --color-border: var(--color-gray-200);
  --color-input: var(--color-gray-200);
  --color-ring: var(--color-primary);
  --color-card: var(--color-background);
  --color-card-foreground: var(--color-foreground);
  --color-popover: var(--color-background);
  --color-popover-foreground: var(--color-foreground);

  /* Status colors */
  --color-destructive: oklch(0.65 0.27 29); /* Indian Red */
  --color-success: oklch(0.55 0.15 145);
  --color-warning: oklch(0.8 0.15 78);

  /* Border radius */
  --radius: 0.5rem;
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --font-sans: var(--font-poppins);
  --font-eczar: var(--font-eczar);

  --animate-enter-from-right: enterFromRight 250ms ease;
  --animate-enter-from-left: enterFromLeft 250ms ease;
  --animate-exit-to-right: exitToRight 250ms ease;
  --animate-exit-to-left: exitToLeft 250ms ease;
  --animate-fade-in: fadeIn 200ms ease;
  --animate-fade-out: fadeOut 200ms ease;
  --animate-scale-in: scaleIn 200ms ease;
  --animate-scale-out: scaleOut 200ms ease;
  --animate-slide-down: slideDown 300ms ease-out;
  --animate-slide-up: slideUp 300ms ease-out;

  @keyframes enterFromRight {
    from {
      opacity: 0;
      transform: translateX(200px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes enterFromLeft {
    from {
      opacity: 0;
      transform: translateX(-200px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes exitToRight {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(200px);
    }
  }

  @keyframes exitToLeft {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(-200px);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: rotateX(-10deg) scale(0.9);
    }
    to {
      opacity: 1;
      transform: rotateX(0deg) scale(1);
    }
  }

  @keyframes scaleOut {
    from {
      opacity: 1;
      transform: rotateX(0deg) scale(1);
    }
    to {
      opacity: 0;
      transform: rotateX(-10deg) scale(0.95);
    }
  }

  @keyframes slideDown {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes slideUp {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply font-eczar;
  }
}

@custom-variant pointer-coarse (@media (pointer: coarse));
